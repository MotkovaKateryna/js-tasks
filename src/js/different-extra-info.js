//  üìå –ò–∑ —Å—Ç—Ä–æ–∫–∏ –≤ JavaScript –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ —Å–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤. –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤:

// üìç–ú–µ—Ç–æ–¥ split():
// –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Ä–∞–∑–±–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ –º–∞—Å—Å–∏–≤ –ø–æ–¥—Å—Ç—Ä–æ–∫, –∏—Å–ø–æ–ª—å–∑—É—è –∑–∞–¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å. –í –≤–∞—à–µ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∞ "Press,Moderators,Speakers", 
// –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–µ—Ç–æ–¥ split(","), —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ ["Press", "Moderators", "Speakers"]. –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
// JavaScript

// var string = "Press,Moderators,Speakers";
// var arr = string.split(",");
// console.log(arr);

// üìç–†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ:
// –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∞ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä "[a][b][c][d][e]", –∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏ –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, 
// –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ. –ü—Ä–∏–º–µ—Ä:
// JavaScript

// var line = "[a][b][c][d][e]";
// var arr = line.replace(/\[|\]/g, "").split("");
// console.log(arr);

//  üìå –º–µ—Ç–æ–¥ reduce()

/*
–ú–µ—Ç–æ–¥ reduce() –≤ JavaScript –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é-—Ä–µ–¥—É–∫—Ç–æ—Ä (reducer) –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞, –ø—Ä–æ—Ö–æ–¥—è –ø–æ –Ω–µ–º—É —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ. –û–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–¥–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
–í–æ—Ç –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
–°–∏–Ω—Ç–∞–∫—Å–∏—Å:
array.reduce(callback[, initialValue])
callback - —Ñ—É–Ω–∫—Ü–∏—è, –≤—ã–ø–æ–ª–Ω—è—é—â–∞—è—Å—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞. –û–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–µ—Ç—ã—Ä–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞:
accumulator (–∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä) - –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è callback –ø–æ—Å–ª–µ –ø–æ—Å–µ—â–µ–Ω–∏—è –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞, –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ initialValue, –µ—Å–ª–∏ –æ–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ.
currentValue (—Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞).
index (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π) - –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.
array (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π) - –º–∞—Å—Å–∏–≤, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è reduce.
initialValue (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π) - –æ–±—ä–µ–∫—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–µ—Ä–≤–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ callback.
–ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –º–∞—Å—Å–∏–≤—É:
–ú–µ—Ç–æ–¥ reduce() –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é callback –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞, –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –≤ –Ω–µ–º.
–ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã accumulator –∏ currentValue –º–æ–≥—É—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ª–∏—á–∏—è initialValue:
–ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω initialValue, —Ç–æ accumulator —Ä–∞–≤–µ–Ω initialValue, –∞ currentValue —Ä–∞–≤–µ–Ω –ø–µ—Ä–≤–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –≤ –º–∞—Å—Å–∏–≤–µ.
–ï—Å–ª–∏ initialValue –Ω–µ –∑–∞–¥–∞–Ω, —Ç–æ accumulator —Ä–∞–≤–µ–Ω –ø–µ—Ä–≤–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –≤ –º–∞—Å—Å–∏–≤–µ, –∞ currentValue —Ä–∞–≤–µ–Ω –≤—Ç–æ—Ä–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é.
–ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π –∏ initialValue –Ω–µ —É–∫–∞–∑–∞–Ω, –±—É–¥–µ—Ç –±—Ä–æ—à–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ TypeError.
–ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –µ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤–µ) –∏ initialValue –Ω–µ —É–∫–∞–∑–∞–Ω, –≤–µ—Ä–Ω–µ—Ç—Å—è —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –±–µ–∑ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ callback.
–ü—Ä–∏–º–µ—Ä:
–ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —É –Ω–∞—Å –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ [0, 1, 2, 3, 4].
–ï—Å–ª–∏ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º reduce() –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—É–º–º—ã –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
JavaScript

const sum = [0, 1, 2, 3, 4].reduce((previousValue, currentValue) => {
  return previousValue + currentValue;
});
// –†–µ–∑—É–ª—å—Ç–∞—Ç: 10
–ö–æ–¥, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —à—Ç—É—á–Ω–∏–º —ñ–Ω—Ç–µ–ª–µ–∫—Ç–æ–º. –ü–µ—Ä–µ–≤—ñ—Ä—è–π—Ç–µ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –æ–±–µ—Ä–µ–∂–Ω–æ. –î–æ–¥–∞—Ç–∫–æ–≤—ñ –≤—ñ–¥–æ–º–æ—Å—Ç—ñ –ø—Ä–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –π –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.
–ö–æ–ª–±—ç–∫-—Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —á–µ—Ç—ã—Ä–µ —Ä–∞–∑–∞, –∏ –∑–Ω–∞—á–µ–Ω–∏—è previousValue –∏ currentValue –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ —Å–ª–µ–¥—É—é—â–∏–µ:
–ü–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤: 0 + 1 = 1
–í—Ç–æ—Ä–æ–π –≤—ã–∑–æ–≤: 1 + 2 = 3
–¢—Ä–µ—Ç–∏–π –≤—ã–∑–æ–≤: 3 + 3 = 6
–ß–µ—Ç–≤–µ—Ä—Ç—ã–π –≤—ã–∑–æ–≤: 6 + 4 = 10
–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –º–µ—Ç–æ–¥ reduce() –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–≤–µ—Å—Ç–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –∫ –æ–¥–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é, –≤—ã–ø–æ–ª–Ω—è—è –∑–∞–¥–∞–Ω–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é 
*/


/*
üìåArray.from() - —ç—Ç–æ –º–µ—Ç–æ–¥ JavaScript, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –º–∞—Å—Å–∏–≤—ã –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ–±—ä–µ–∫—Ç–æ–≤. –î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä–µ–º –µ–≥–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ:

–ò—Ç–µ—Ä–∏—Ä—É–µ–º—ã–µ –æ–±—ä–µ–∫—Ç—ã (iterable objects): –≠—Ç–æ –æ–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∞—Å—Å–∏–≤—ã, –º–Ω–æ–∂–µ—Å—Ç–≤–∞, –∫–∞—Ä—Ç—ã –∏ –¥—Ä—É–≥–∏–µ). –ú–µ—Ç–æ–¥ Array.from() –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–∞–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤.
–û–±—ä–µ–∫—Ç—ã, –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ –º–∞—Å—Å–∏–≤—ã (array-like objects): –≠—Ç–æ –æ–±—ä–µ–∫—Ç—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ length (–∫–∞–∫ —É –º–∞—Å—Å–∏–≤–æ–≤), –∏ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∏–Ω–¥–µ–∫—Å–∞–º. –ù–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–∫–∏ (–≥–¥–µ –∫–∞–∂–¥–∞—è –±—É–∫–≤–∞ - —ç—Ç–æ —ç–ª–µ–º–µ–Ω—Ç), –∞ —Ç–∞–∫–∂–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥—Ä—É–≥–∏–µ –æ–±—ä–µ–∫—Ç—ã.
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Array.from():

–ò—Ç–µ—Ä–∏—Ä—É–µ–º—ã–µ –æ–±—ä–µ–∫—Ç—ã:
–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –∏–∑ Set:
JavaScript

const set = new Set(['foo', 'bar', 'baz']);
const newArray = Array.from(set);
// newArray —Å–æ–¥–µ—Ä–∂–∏—Ç ['foo', 'bar', 'baz']
–ö–æ–¥, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —à—Ç—É—á–Ω–∏–º —ñ–Ω—Ç–µ–ª–µ–∫—Ç–æ–º. –ü–µ—Ä–µ–≤—ñ—Ä—è–π—Ç–µ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –æ–±–µ—Ä–µ–∂–Ω–æ. –î–æ–¥–∞—Ç–∫–æ–≤—ñ –≤—ñ–¥–æ–º–æ—Å—Ç—ñ –ø—Ä–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –π –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.
–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –∏–∑ Map:
JavaScript

const map = new Map([[1, 2], [2, 4], [4, 8]]);
const newArray = Array.from(map);
// newArray —Å–æ–¥–µ—Ä–∂–∏—Ç [[1, 2], [2, 4], [4, 8]]
–ö–æ–¥, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —à—Ç—É—á–Ω–∏–º —ñ–Ω—Ç–µ–ª–µ–∫—Ç–æ–º. –ü–µ—Ä–µ–≤—ñ—Ä—è–π—Ç–µ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –æ–±–µ—Ä–µ–∂–Ω–æ. –î–æ–¥–∞—Ç–∫–æ–≤—ñ –≤—ñ–¥–æ–º–æ—Å—Ç—ñ –ø—Ä–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –π –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.
–û–±—ä–µ–∫—Ç—ã, –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ –º–∞—Å—Å–∏–≤—ã:
–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏:
JavaScript

const str = 'foo';
const charArray = Array.from(str);
// charArray —Å–æ–¥–µ—Ä–∂–∏—Ç ['f', 'o', 'o']
–ö–æ–¥, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —à—Ç—É—á–Ω–∏–º —ñ–Ω—Ç–µ–ª–µ–∫—Ç–æ–º. –ü–µ—Ä–µ–≤—ñ—Ä—è–π—Ç–µ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –æ–±–µ—Ä–µ–∂–Ω–æ. –î–æ–¥–∞—Ç–∫–æ–≤—ñ –≤—ñ–¥–æ–º–æ—Å—Ç—ñ –ø—Ä–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –π –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.
–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –∏–∑ —á–∏—Å–µ–ª:
JavaScript

const numbers = [1, 2, 3];
const newArray = Array.from(numbers);
// newArray —Å–æ–¥–µ—Ä–∂–∏—Ç [1, 2, 3]
–ö–æ–¥, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —à—Ç—É—á–Ω–∏–º —ñ–Ω—Ç–µ–ª–µ–∫—Ç–æ–º. –ü–µ—Ä–µ–≤—ñ—Ä—è–π—Ç–µ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –æ–±–µ—Ä–µ–∂–Ω–æ. –î–æ–¥–∞—Ç–∫–æ–≤—ñ –≤—ñ–¥–æ–º–æ—Å—Ç—ñ –ø—Ä–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –π –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.
–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, Array.from() –ø–æ–ª–µ–∑–µ–Ω, –∫–æ–≥–¥–∞ –Ω–∞–º –Ω—É–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤ –º–∞—Å—Å–∏–≤—ã. –û–Ω —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ 
—Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ (–ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–π –≤—Ç–æ—Ä—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º), –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏–º–µ–Ω—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –µ–≥–æ –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤.
–ø—Ä–∏–º–µ—Ä Array.from() —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤
const numbers = [1, 2, 3, 4, 5];// –ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª

function multiplyByTwo(number) {// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞: —É–º–Ω–æ–∂–µ–Ω–∏–µ –Ω–∞ 2
    return number * 2;
}
const doubledNumbers = Array.from(numbers, multiplyByTwo);// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –ø—Ä–∏–º–µ–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –∫–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞

console.log(doubledNumbers); // –í—ã–≤–æ–¥: [2, 4, 6, 8, 10]
*/

